# C:\Users\Gulendol\Projects\aspectran\ADE\workspace\aspectran.example\webapp\WEB-INF\aspectran\config\example-root.xml.apon
aspectran: {
	setting: {
		transletNamePattern: "/example/*"
		transletNamePatternPrefix: "/example/"
		activityDefaultHandler: "webActivityDefaultHandler"
		nullableContentId: true
		nullableActionId: true
	}
	aspect: {
		id: "defaultRequestRule"
		useFor: "translet"
		joinpoint: {
			scope: "request"
		}
		setting: {
			multipart.temporaryFilePath: "/d:/"
			multipart.maxRequestSize: "10M"
			characterEncoding: "utf-8"
		}
	}
	aspect: {
		id: "defaultResponseRule"
		useFor: "translet"
		joinpoint: {
			scope: "response"
		}
		setting: {
			viewDispatcher: "jspViewDispatcher"
			characterEncoding: "utf-8"
			defaultContentType: "text/html"
		}
	}
	aspect: {
		id: "defaultResponseRule2"
		useFor: "translet"
		joinpoint: {
			scope: "response"
		}
		setting: {
			multipart.temporaryFilePath: "/d:/"
			multipart.maxRequestSize: "10M"
			characterEncoding: "utf-8"
		}
	}
	aspect: {
		id: "exception1"
		useFor: "translet"
		joinpoint: {
			scope: "translet"
			pointcut: {
				target: {
					translet: "/example/hello/*"
				}
			}
		}
		advice: {
			exceptionRaized: {
				responseByContentType: {
					exceptionType: "java.lang.reflect.InvocationTargetException"
					transform: {
						type: "transform/xml"
						contentType: "text/xml"
						action: {
						}
						action: {
							echo: [
								{
									type: "map"
									value: {
										errorCode: "E0001"
										message: "error occured."
									}
								}
							]
						}
					}
				}
			}
		}
	}
	aspect: {
		id: "helloAdvice"
		useFor: "translet"
		joinpoint: {
			scope: "content"
			pointcut: {
				target: {
					+: "/example/hello/*@example.hello.HelloAction^applyTheAdvice"
					-: "/aaaa*@*^bbb"
				}
				target: {
					translet: "/example/hello/*"
					bean: "example.hello.HelloAction"
					method: "applyTheAdvice"
					exclude: {
						translet: "/example/hello/*"
						bean: "example.hello.HelloAction"
						method: "applyTheAdvice"
					}
				}
			}
		}
		advice: {
			bean: "advice.HelloAdvice"
			before: {
				action: {
					method: "beforeCountTo10"
				}
			}
			after: {
				action: {
					method: "afterCountTo10"
				}
			}
		}
	}
	bean: {
		id: "webActivityDefaultHandler"
		class: "com.aspectran.web.activity.WebActivityDefaultHandler"
		scope: "singleton"
	}
	bean: {
		id: "jspViewDispatcher"
		class: "com.aspectran.web.view.JspViewDispatcher"
		scope: "singleton"
	}
	bean: {
		id: "example.*"
		class: "com.aspectran.example.**.*Action"
		scope: "singleton"
	}
	bean: {
		id: "advice.*"
		class: "com.aspectran.example.aspect.**.*Advice"
		scope: "session"
	}
	bean: {
		id: "sampleBean"
		class: "com.aspectran.example.bean.SampleBean"
		scope: "singleton"
	}
	translet: {
		name: "hello"
		transform: {
			type: "transform/text"
			contentType: "text/plain"
			template: {
				content: (
					|hello~ ${name}
				)
			}
		}
	}
	translet: {
		name: "hello2"
		contents: {
			content: {
				action: {
					id: "countTo10"
					beanId: "example.hello.HelloAction"
					method: "countTo10AsArray"
				}
			}
		}
		response: {
			transform: {
				type: "transform/xml"
				contentType: "text/xml"
			}
		}
	}
	translet: {
		name: "hello3"
		content: {
			action: {
				id: "countTo10"
				beanId: "example.hello.HelloAction"
				method: "countTo10AsArray"
			}
		}
		response: {
			transform: {
				type: "transform/xml"
				contentType: "text/xml"
			}
		}
	}
	translet: {
		name: "hello4"
		content: {
			action: {
				include: "/example/hello3"
			}
		}
		response: {
			transform: {
				type: "transform/xml"
				contentType: "text/xml"
			}
		}
	}
	translet: {
		name: "hello/countTo10"
		transform: {
			type: "transform/text"
			contentType: "text/plain"
			template: {
				content: (
					|@{result1}
				)
			}
			action: {
				id: "result1"
				beanId: "example.hello.HelloAction"
				method: "countTo10"
			}
		}
	}
	translet: {
		name: "hello/countTo10twice"
		action: {
			id: "result1"
			beanId: "example.hello.HelloAction"
			method: "countTo10"
		}
		action: {
			id: "result2"
			beanId: "example.hello.HelloAction"
			method: "countTo10"
		}
		transform: {
			type: "transform/text"
			contentType: "text/plain"
			template: {
				content: (
					|(first)
					|@{result1}
					|(second)
					|@{result2}
				)
			}
		}
	}
	translet: {
		name: "hello/countTo10.xml"
		transform: {
			type: "transform/xml"
			contentType: "text/xml"
			action: {
				id: "result"
				beanId: "example.hello.HelloAction"
				method: "countTo10AsArray"
			}
			pretty: true
		}
	}
	translet: {
		name: "hello/countTo10ext"
		response: {
			transform: {
				type: "transform/text"
				contentType: "text/plain"
				template: {
					content: (
						|@{result}
					)
				}
				action: {
					id: "result"
					beanId: "example.hello.HelloAction"
					method: "countTo10"
				}
			}
		}
		response: {
			name: ".xml"
			transform: {
				type: "transform/xml"
				contentType: "text/xml"
				action: {
					beanId: "example.hello.HelloAction"
					method: "countTo10AsArray"
				}
				pretty: true
			}
		}
	}
	translet: {
		name: "hello/applyTheAdvice.xml"
		transform: {
			type: "transform/xml"
			contentType: "text/xml"
			action: {
				id: "applyTheAdvice"
				beanId: "example.hello.HelloAction"
				method: "applyTheAdvice"
			}
			pretty: true
		}
	}
	translet: {
		name: "echo"
		transform: {
			type: "transform/text"
			contentType: "text/html"
			template: {
				content: (
					|<html>
					|<style>
					|body { background-color: blue; color: white; }
					|dt { font-weight: bold; color: yellow; }
					|</style>
					|<body>
					|	<dl>
					|		<dt>item1</dt>
					|		<dd>@{echo^map0.item1}</dd>
					|		<dt>item2</dt>
					|		<dd>@{echo^map0.item2}</dd>
					|	</dl>
					|</body>
					|</html>
				)
			}
			action: {
				id: "echo"
				echo: [
					{
						type: "map"
						name: "map0"
						value: {
							item1: "${item1}"
							item2: "${item2}"
						}
						valueType: "string"
						tokenize: true
					}
				]
			}
		}
	}
	translet: {
		name: "hello/sampleBean.txt"
		transform: {
			type: "transform/text"
			contentType: "text/plain"
			template: {
				content: (
					|text: @{sample}
					|The length of the output string is @{sample^length:0} bytes.
				)
			}
			action: {
				id: "sample"
				beanId: "sampleBean"
				method: "hello"
			}
		}
	}
	translet: {
		name: "goNaver"
		redirect: {
			url: "http://search.naver.com/search.naver"
			parameter: [
				{
					name: "where"
					value: "nexearch"
				}
				{
					name: "query"
					value: "서울"
				}
				{
					name: "sm"
					value: "top_hty"
				}
				{
					name: "fbm"
					value: "1"
				}
				{
					name: "ie"
					value: "utf8"
				}
			]
		}
	}
	import: {
		file: "/WEB-INF/aspectran/config/example-scheduler.xml"
	}
}
