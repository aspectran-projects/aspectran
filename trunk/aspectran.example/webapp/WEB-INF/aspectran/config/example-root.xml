<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE aspectran PUBLIC "-//aspectran.com//DTD Aspectran 1.0//EN"
                           "../dtd/aspectran-1.0.dtd">

<aspectran>

	<settings>
		<setting name="transletNamePattern" value="/example/*"/>
		<setting name="transletInterfaceClass" value="com.aspectran.example.common.MyTranslet"/>
		<setting name="transletImplementClass" value="com.aspectran.example.common.MyTransletImpl"/>
		<setting name="activityDefaultHandler" value="webActivityDefaultHandler"/>
		<setting name="nullableContentId" value="true"/>
		<setting name="nullableActionId" value="true"/>
	</settings>
	
	<import file="/WEB-INF/aspectran/config/example-scheduler.xml"/>
	
	<bean id="webActivityDefaultHandler" class="com.aspectran.web.activity.WebActivityDefaultHandler" scope="singleton"/>
	<bean id="jspViewDispatcher" class="com.aspectran.web.view.JspViewDispatcher" scope="singleton"/>
	<bean id="example.*" class="com.aspectran.example.**.*Action" scope="singleton"/>
	<bean id="advice.*" class="com.aspectran.example.aspect.**.*Advice"/>
	<bean id="sampleBean" class="com.aspectran.example.bean.SampleBean" scope="singleton"/>
	
	<aspect id="defaultRequestRule">
		<joinpoint scope="request"/>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="multipart.maxRequestSize" value="10M"/>
			<setting name="multipart.temporaryFilePath" value="/d:/"/>
		</settings>
	</aspect>
	
	<aspect id="defaultResponseRule">
		<joinpoint scope="response"/>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="defaultContentType" value="text/html"/>
			<setting name="viewDispatcher" value="jspViewDispatcher"/>
		</settings>
	</aspect>
	
	<aspect id="defaultResponseRule2">
		<joinpoint scope="response"/>
		<settings>
			characterEncoding: "utf-8"
			multipart.maxRequestSize: "10M"
			multipart.temporaryFilePath: "/d:/"
		</settings>
	</aspect>

	<aspect id="exception1">
		<joinpoint scope="translet">
			<pointcut>
				target: {
					translet: "/example/hello/*"
				}
			</pointcut>
		</joinpoint>
		<advice>
			<exceptionRaized>
				<responseByContentType exceptionType="java.lang.reflect.InvocationTargetException">
					<transform contentType="text/xml" type="transform/xml">
						<echo>
							errorCode: "E0001"
							message: "error occured."
						</echo>
						<echo>
							<item type="map">
								<value name="errorCode">E0001</value>
								<value name="message">error occured.</value>
							</item>
						</echo>
					</transform>
				</responseByContentType>
			</exceptionRaized>
		</advice>
	</aspect>

	<aspect id="helloAdvice">
		<joinpoint scope="translet">
			<pointcut>
				target: {
					+: "/example/hello/*@example.hello.HelloAction^applyTheAdvice"
					-: "/aaaa*@*^bbb" 
				}
			</pointcut>
		</joinpoint>
		<advice bean="advice.HelloAdvice">
			<before>
				<action method="beforeCountTo10"/>
			</before>
			<after>
				<action method="afterCountTo10"/>
			</after>
		</advice>
	</aspect>

	<translet name="hello">
		<transform type="transform/text">
			<template>
				hello~ ${name}
			</template>
		</transform>
	</translet>

	<translet name="hello2">
		<contents name="hello1" omittable="false">
			<content name="hello2">
				<action id="countTo10" bean="example.hello.HelloAction" method="countTo10AsArray"/>
			</content>
		</contents>
		<response>
			<transform type="transform/xml"/>
		</response>
	</translet>

	<translet name="hello3">
		<content name="hello3">
			<action id="countTo10" bean="example.hello.HelloAction" method="countTo10AsArray"/>
		</content>
		<response>
			<transform type="transform/xml"/>
		</response>
	</translet>

	<translet name="hello4">
		<content name="includeHello3">
			<include translet="/example/hello3"/>
		</content>
		<response>
			<transform type="transform/xml"/>
		</response>
	</translet>

	<translet name="hello/countTo10">
		<transform type="transform/text">
			<action id="result1" bean="example.hello.HelloAction" method="countTo10"/>
			<template>
@{result1}
			</template>
		</transform>
	</translet>

	<translet name="hello/countTo10twice">
		<action id="result1" bean="example.hello.HelloAction" method="countTo10"/>
		<action id="result2" bean="example.hello.HelloAction" method="countTo10"/>
		<transform type="transform/text" contentType="text/plain">
			<template>
(first)
@{result1}
(second)
@{result2}
			</template>
		</transform>
	</translet>

	<translet name="hello/countTo10">
		<response name=".xml">
			<transform type="transform/xml" pretty="true">
				<action id="result" bean="example.hello.HelloAction" method="countTo10AsArray"/>
			</transform>
		</response>
		<response name=".json">
			<transform type="transform/json" contentType="text/plain" pretty="true">
				<action id="result" bean="example.hello.HelloAction" method="countTo10AsArray"/>
			</transform>
		</response>
		<response name=".apon">
			<transform type="transform/apon" contentType="text/plain" pretty="true">
				<action id="result" bean="example.hello.HelloAction" method="countTo10AsArray"/>
			</transform>
		</response>
	</translet>

	<translet name="hello/countTo10ext">
		<response>
			<transform type="transform/text">
				<action id="result" bean="example.hello.HelloAction" method="countTo10"/>
				<template>
					@{result}
				</template>
			</transform>
		</response>
		<response name=".xml">
			<transform type="transform/xml" pretty="true">
				<action bean="example.hello.HelloAction" method="countTo10AsArray"/>
			</transform>
		</response>
	</translet>

	<translet name="hello/applyTheAdvice.xml">
		<transform type="transform/xml" pretty="true">
			<action id="applyTheAdvice" bean="example.hello.HelloAction" method="applyTheAdvice"/>
		</transform>
	</translet>

	<translet name="echo">
		<transform type="transform/text" contentType="text/html">
			<echo id="echo">
				<item name="params" type="map" valueType="string" tokenize="true">
					<value name="param1">${param1:default1}</value>
					<value name="param2">${param2:default2}</value>
				</item>
			</echo>
			<template>
<![CDATA[
<html>
<style>
body { background-color: blue; color: white; }
dt { font-weight: bold; color: yellow; }
</style>
<body>
	<dl>
		<dt>item1</dt>
		<dd>@{echo^params.param1}</dd>
		<dt>item2</dt>
		<dd>@{echo^params.param2}</dd>
	</dl>
</body>
</html>
]]>
			</template>
		</transform>
	</translet>

	<translet name="echoParameters">
		<action bean="sampleBean" method="getParameters"/>
		<echo id="echo">
			<item name="params" valueType="parameters" tokenize="true">
				파라메터1: "${param1}"
				파라메터2: "${param2}"
			</item>
		</echo>
		<transform type="transform/apon" contentType="text/plain" pretty="true">
		</transform>
	</translet>

	<translet name="hello/sampleBean.txt">
		<transform type="transform/text">
			<action id="sample" bean="sampleBean" method="hello"/>
			<template>
text: @{sample}
The length of the output string is @{sample^length:0} bytes.
			</template>
		</transform>
	</translet>

	<translet name="goNaver">
		<redirect url="http://search.naver.com/search.naver">
			<parameter>
				<item name="where">nexearch</item>
				<item name="query">서울</item>
				<item name="sm">top_hty</item>
				<item name="fbm">1</item>
				<item name="ie">utf8</item>
			</parameter>
		</redirect>
	</translet>
	
</aspectran>