<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE aspectran PUBLIC "-//ASPECTRAN//DTD Aspectran Configuration 6.0//EN"
        "aspectran-6-test.dtd">
<aspectran>

    <description>
        This is an Aspectran Configuration for Testing.
    </description>

    <append file="/config/sample/environment-config.xml"/>

    <translet name="echo">
        <description>
            두 개의 입력 값과 Aspectran 내장 템플릿 엔진을 사용해서 텍스트 형식으로 출력합니다.
        </description>
        <request>
            <parameters>
                <item name="input-1">${input-1:12345}</item>
                <item name="input-2">${input-2:67890}</item>
            </parameters>
            <attributes>
                <item name="array1" type="array">
                    <value>a</value>
                    <value>b</value>
                </item>
                <item name="array2" type="array">
                    <value>c</value>
                </item>
            </attributes>
        </request>
        <transform type="transform/text" contentType="text/plain">
            <template engine="token" style="apon">
                |Using Builtin Token Template Engine
                |-------------------------------------
                |input-1: ${input-1}
                |input-2: ${input-2}
            </template>
        </transform>
    </translet>

    <translet name="include">
        <include translet="other-translet">
            <attributes>
                <item name="attr1">value1</item>
            </attributes>
        </include>
    </translet>

    <bean id="*" scan="com.aspectran.core.sample.**.*Advice" mask="com.aspectran.core.sample.**.*"/>
    <bean id="*" scan="com.aspectran.core.sample.**.*Action" mask="com.aspectran.core.sample.**.*"/>

    <aspect id="simplestAdviceAspect" order="1">
        <description>
            simplestAction Bean의 helloWorld 메쏘드를 실행하는 Translet이 발견되면,
            해당 Translet의 실행 전에는 simplestAdvice Bean의 welcome 메쏘드를 실행하고,
            해당 Translet의 실행 후에는 simplestAdvice Bean의 goodbye 메쏘드를 실행합니다.
        </description>
        <joinpoint target="translet">
            pointcut: {
                +: hello@TestAction^helloWorld
            }
        </joinpoint>
        <advice bean="TestAdvice">
            <before>
                <action method="welcome"/>
            </before>
            <after>
                <action method="goodbye"/>
            </after>
        </advice>
    </aspect>

    <translet name="hello">
        <description>
            simplestAction 빈에서 helloWorld 메쏘드를 실행합니다.
            helloWorld 메쏘드가 반환하는 "Hello, World." 문자열을 텍스트 형식의 컨텐츠로 응답합니다.
        </description>
        <transform type="transform/text">
            <action id="helloData" bean="TestAction" method="helloWorld"/>
        </transform>
    </translet>

    <template id="echo1" style="apon">
        |ECHO-1
    </template>

    <template id="echo2" style="apon">
        |ECHO-2
    </template>

    <append file="/config/sample/scheduler-config.xml"/>

    <translet name="caseTest">
        <request>
            <attributes>
                <item name="input_1">${input_1:12345}</item>
                <item name="input_2">${input_2:67890}</item>
            </attributes>
        </request>
        <action id="case0" method="case0" bean="SampleAction"/>
        <choose>
            <when test="case1">
                <action id="case1" method="case1" bean="SampleAction"/>
            </when>
            <otherwise>
                <action id="case2" method="case2" bean="SampleAction"/>
            </otherwise>
        </choose>
        <transform type="transform/text">
            <action id="case3" method="case2" bean="SampleAction"/>
            <action id="case4" method="case2" bean="SampleAction"/>
            <template style="apon">
                |@{case0}
                |@{case1}
            </template>
        </transform>
    </translet>

    <translet name="caseTest2">
        <request>
            <parameters>
                <item name="input_1">${input_1:12345}</item>
                <item name="input_2">${input_2:67890}</item>
            </parameters>
            <attributes>
                <item name="input_1">${input_1:12345}</item>
                <item name="input_2">${input_2:67890}</item>
            </attributes>
        </request>
        <contents name="contents-1">
            <content name="content-11">
                <action id="case0" method="case0" bean="SampleAction"/>
                <choose>
                    <when test="case1">
                        <action id="case1" method="case1" bean="SampleAction"/>
                    </when>
                    <otherwise>
                        <action id="case2" method="case2" bean="SampleAction"/>
                    </otherwise>
                </choose>
            </content>
            <content name="content-12">
                <action id="case0" method="case0" bean="SampleAction"/>
                <choose>
                    <when test="case1">
                        <action id="case1" method="case1" bean="SampleAction"/>
                    </when>
                    <otherwise>
                        <action id="case2" method="case2" bean="SampleAction"/>
                    </otherwise>
                </choose>
            </content>
        </contents>
        <response name="name2">
            <transform type="transform/text">
                <action id="case3" method="case2" bean="SampleAction"/>
                <action id="case4" method="case2" bean="SampleAction"/>
                <template style="apon">
                    |@{case0}
                    |@{case1}
                </template>
            </transform>
        </response>
    </translet>

    <translet name="thrownTest">
        <request>
            <parameters>
                <item name="input_1">${input_1:12345}</item>
                <item name="input_2">${input_2:67890}</item>
            </parameters>
            <attributes>
                <item name="input_1">${input_1:12345}</item>
                <item name="input_2">${input_2:67890}</item>
            </attributes>
        </request>
        <contents name="contents-1">
            <content name="content-11">
                <action id="case0" method="case0" bean="SampleAction"/>
                <choose>
                    <when test="case1">
                        <action id="case1" method="case1" bean="SampleAction"/>
                    </when>
                    <otherwise>
                        <action id="case2" method="case2" bean="SampleAction"/>
                    </otherwise>
                </choose>
            </content>
            <content name="content-12">
                <action id="case0" method="case0" bean="SampleAction"/>
                <choose>
                    <when test="case1">
                        <action id="case1" method="case1" bean="SampleAction"/>
                    </when>
                    <otherwise>
                        <action id="case2" method="case2" bean="SampleAction"/>
                    </otherwise>
                </choose>
            </content>
        </contents>
        <response name="name2">
            <transform type="transform/text">
                <action id="case3" method="case2" bean="SampleAction"/>
                <action id="case4" method="case2" bean="SampleAction"/>
                <template style="apon">
                    |@{case0}
                    |@{case1}
                </template>
            </transform>
        </response>
        <exception>
            <thrown>
                <action id="case4" method="case2" bean="SampleAction"/>
                <redirect path="/fkdjalsfds"/>
            </thrown>
        </exception>
    </translet>

</aspectran>